name: crossbuild-mingw

on:
  push:
    branches: [ main ]
    tags: ["*.*.*"]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-24.04
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: win32
            ARCH: 32
            PACKAGES: g++-mingw-w64-i686 wine wine32
          - name: win64
            ARCH: 64
            PACKAGES: g++-mingw-w64-x86-64 wine wine64 wine32:i386

    steps:
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@bfa03e1de4d7f7c3e80ad9109feedd05c4f5a716 # v1.2.19
    - name: Install Dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt install -y \
          zip \
          ${{ matrix.PACKAGES }}
    - name: Setup Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version: '3.12'
    - name: Install Python Dependencies
      run: pip3 install -r .ci/requirements.txt --require-hashes
    - name: Build
      run: bash .ci/build-win.sh ${{ matrix.ARCH }}
    - name: Test
      run: meson devenv -Cbuild-win${{ matrix.ARCH }} meson test -t 10 --print-errorlogs --suite=harfbuzz
    - name: Archive artifacts
      uses: actions/upload-artifact@v5
      with:
        name: harfbuzz-win${{ matrix.ARCH }}
        path: harfbuzz-win${{ matrix.ARCH }}.zip
        if-no-files-found: error

  release:
    name: Create and populate release
    needs: build
    runs-on: ubuntu-24.04
    if: contains(github.ref, 'refs/tags/')
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v5
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          merge-multiple: true
      - name: Rename artifacts
        run: |
          for file in harfbuzz-win*.zip; do
            mv -v "$file" "${file%.zip}-${{ github.ref_name }}.zip"
          done
      - name: Check for release
        id: create_release
        run: |
          if ! gh release view ${{ github.ref_name }}; then
            gh release create ${{ github.ref_name }} --title ${{ github.ref_name }}
          fi
      - name: Populate release
        run: |
          gh release upload ${{ github.ref_name }} harfbuzz-win*-${{ github.ref_name }}.zip --clobber
